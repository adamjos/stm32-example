# Directories
SRC_DIR = src
INC_DIR = inc
LIB_DIR = $(INC_DIR)
BUILD_DIR = build
OBJ_DIR = $(BUILD_DIR)/obj
BIN_DIR = $(BUILD_DIR)/bin

# Files
TARGET = $(BIN_DIR)/app

SOURCES = main.c \
		  led.c \
		  crt.s

OBJECT_NAMES := $(SOURCES:.c=.o)
OBJECT_NAMES := $(OBJECT_NAMES:.s=.o)
OBJECTS = $(patsubst %,$(OBJ_DIR)/%,$(OBJECT_NAMES))

CC = arm-none-eabi-gcc
AS = arm-none-eabi-as
LD = arm-none-eabi-ld
BIN = arm-none-eabi-objcopy
STL = st-flash

WFLAGS = -Wall -Wextra -Werror -Wshadow
CFLAGS = -mthumb -mcpu=cortex-m33 $(WFLAGS) \
	$(addprefix -I,$(INC_DIR)) -Og -g
LINKER_SCRIPT = linker.ld
LDFLAGS =  -T $(LINKER_SCRIPT) $(addprefix -L,$(LIB_DIR))

all: $(TARGET).bin

%.o: %.s
	$(AS) -o $@ $^

%.o: %.c
	$(CC) $(CFLAGS) -Iinc -c -o $@ $^

$(TARGET).elf: main.o crt.o led.o
	@mkdir -p $(dir $@)
	$(LD) $(LDFLAGS) -o $@ $^

$(TARGET).bin: $(TARGET).elf
	$(BIN) -O binary $^ $@

clean:
	rm -f *.o *.elf *.bin -r build/*

flash: $(TARGET).bin
	$(STL) write $^ 0x8000000

erase:
	$(STL) erase
